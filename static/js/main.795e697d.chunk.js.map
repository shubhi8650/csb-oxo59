{"version":3,"sources":["components/Card.js","components/Search.js","App.js","index.js"],"names":["Card","search","data","className","filter","val","name","toLowerCase","includes","map","item","key","src","id","alt","email","Math","floor","random","Search","setSearch","setData","onChange","e","value","target","type","placeholder","App","useState","getData","a","fetch","response","json","deta","useEffect","rootElement","document","getElementById","ReactDOM","render"],"mappings":"2LA0BeA,EA1BF,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACtB,OACE,qBAAKC,UAAU,YAAf,SACGD,EACEE,QAAO,SAACC,GACP,MAAc,IAAVJ,GAEOI,EAAIC,KAAKC,cAAcC,SAASP,EAAOM,eADzCF,OACF,KAIRI,KAAI,SAACC,EAAMC,GAAP,OACH,sBAA4CR,UAAU,eAAtD,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKS,IAAG,+BAA0BF,EAAKG,GAA/B,YAA6CC,IAAI,UAE3D,sBAAKX,UAAU,UAAf,UACE,6BAAKO,EAAKJ,OACV,4BAAII,EAAKK,aANHC,KAAKC,MAAsB,IAAhBD,KAAKE,iBCJrBC,EARA,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,UAA+B,EAApBlB,KAAoB,EAAdmB,QAKjC,OAAO,uBAAOC,SAJQ,SAACC,GACrB,IAAMC,EAAQD,EAAEE,OAAOD,MACvBJ,EAAUI,IAE2BE,KAAK,OAAOC,YAAY,cCgClDC,G,MAhCH,WACV,MAAwBC,mBAAS,IAAjC,mBAAO3B,EAAP,KAAamB,EAAb,KACA,EAA4BQ,mBAAS,IAArC,mBAAO5B,EAAP,KAAemB,EAAf,KAEMU,EAAO,uCAAG,8BAAAC,EAAA,sEACSC,MAAM,8CADf,cACRC,EADQ,gBAEKA,EAASC,OAFd,OAERC,EAFQ,OAGdd,EAAQc,GAHM,2CAAH,qDAab,OAPAC,qBAAU,WACRN,MAKC,IAED,sBAAK3B,UAAU,iBAAf,UACE,qBAAKA,UAAU,SAAf,SACE,gDAEF,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,CAAQiB,UAAWA,EAAWlB,KAAMA,EAAMmB,QAASA,MAErD,qBAAKlB,UAAU,OAAf,SACE,cAAC,EAAD,CAAMF,OAAQA,EAAQC,KAAMA,WC1B9BmC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.795e697d.chunk.js","sourcesContent":["const Card = ({ search, data }) => {\r\n  return (\r\n    <div className=\"main-card\">\r\n      {data\r\n        .filter((val) => {\r\n          if (search == \"\") {\r\n            return val;\r\n          } else if (val.name.toLowerCase().includes(search.toLowerCase())) {\r\n            return val;\r\n          }\r\n        })\r\n        .map((item, key) => (\r\n          <div key={Math.floor(Math.random() * 1000)} className=\"wrapper-card\">\r\n            <div className=\"image\">\r\n              <img src={`https://robohash.org/${item.id}?200x200`} alt=\"pic\" />\r\n            </div>\r\n            <div className=\"details\">\r\n              <h3>{item.name}</h3>\r\n              <p>{item.email}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","const Search = ({ setSearch, data, setData }) => {\r\n  const changeHandler = (e) => {\r\n    const value = e.target.value;\r\n    setSearch(value);\r\n  };\r\n  return <input onChange={changeHandler} type=\"text\" placeholder=\"Search..\" />;\r\n};\r\n\r\nexport default Search;\r\n","import { useEffect, useState } from \"react\";\nimport Card from \"./components/Card\";\nimport Search from \"./components/Search\";\nimport \"./styles.css\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  const getData = async () => {\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    const deta = await response.json();\n    setData(deta);\n  };\n\n  useEffect(() => {\n    getData();\n    // const url = \"https://jsonplaceholder.typicode.com/users\";\n    // fetch(url)\n    //   .then((res) => res.json())\n    //   .then((result) => setData(result));\n  }, []);\n  return (\n    <div className=\"main-component\">\n      <div className=\"header\">\n        <h1>ROBO ACTIONS</h1>\n      </div>\n      <div className=\"search\">\n        <Search setSearch={setSearch} data={data} setData={setData} />\n      </div>\n      <div className=\"card\">\n        <Card search={search} data={data} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}